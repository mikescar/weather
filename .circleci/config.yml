version: 2
jobs:
  test:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests
          command: npm test

  deploy_to_staging:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GCLOUD_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GCLOUD_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Docker build and push
          command: |
            docker build \
              --build-arg COMMIT_HASH=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t ${GCLOUD_PROJECT_NAME} .
            docker tag ${GCLOUD_PROJECT_NAME} ${GCLOUD_REGISTRY_DOMAIN}/${GCLOUD_PROJECT_ID}/${GCLOUD_PROJECT_NAME}:${CIRCLE_SHA1}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://${GCLOUD_REGISTRY_DOMAIN}
            docker push ${GCLOUD_REGISTRY_DOMAIN}/${GCLOUD_PROJECT_ID}/${GCLOUD_PROJECT_NAME}:${CIRCLE_SHA1}
      - run:
          name: Deploy to Kubernetes
          command: |
            envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
            kubectl apply -f ${HOME}/patched_k8s.yml
            kubectl rollout status deployment/${GCLOUD_PROJECT_NAME}

workflows:
  version: 2
  pipeline:
    jobs:
      - test
      - deploy_to_staging:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - circle
